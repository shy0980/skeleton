// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// atr1 -> kinda email atr2-> password

model Post {
  id        String    @id @default(uuid())
  title     String
  body      String
  atr1      String
  atr2      String
  atr3      String
  atr4      String
  token     Int       @default(10)
  createdAt DateTime  @default(now())
  comments  Comment[]
  Intrest   Intrest[]
  Upvote    Upvote[]
  Message   Message[]
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String
  password String
  etc1     Int
  etc2     String
  etc3     String
  verified Boolean
  comments Comment[]
  likes    Like[]
  Intrest  Intrest[]
  Upvote   Upvote[]
  Message  Message[]
}

model Comment {
  id        String    @id @default(uuid())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  parent    Comment?  @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentChild")
  parentId  String?
  likes     Like[]
}

model Like {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  commentId String

  @@id([userId, commentId])
}

model Upvote {
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  postId String

  @@id([userId, postId])
}

model Message {
  message String
  mode    Int
  user    User   @relation(fields: [userId], references: [id])
  post    Post   @relation(fields: [postId], references: [id])
  userId  String
  postId  String

  @@id([userId, postId])
}

model Intrest {
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  postId String

  @@id([userId, postId])
}
